import React, { useState } from "react";
import Button from "react-bootstrap/Button";
import Offcanvas from "react-bootstrap/Offcanvas";
import Row from "react-bootstrap/Row";
import Col from "react-bootstrap/Col";
import Nav from "react-bootstrap/Nav";
import Navbar from "react-bootstrap/Navbar";
import NavDropdown from "react-bootstrap/NavDropdown";
import { Link, useNavigate } from "react-router-dom";
import { UserAuth } from "../../context/AuthContext";
import "./Dashboard.css";
const Dashboard = () => {
  const navigate = useNavigate();
  const { user, logout } = UserAuth();
  const [show, setShow] = useState(true);
  const handleClose = () => setShow(false);
  const handleShow = () => setShow(true);

  const handleLogout = async () => {
    try {
      await logout();
      navigate("/signin");
      console.log("you logout");
    } catch (e) {
      console.log(e.message);
    }
  };
  return (
    <Row className="dashboard m-0">
      <Col md={2} className="sidebar">
        <div className="dashboard-title">ADMIN</div>
        <div className="dashboard-info">
          <img src="./image/Logo.png" className="dashboard-avatar" alt="" />
          <span>{user && user.email}</span>
        </div>
        <Link to="./content">
          <Button variant="warning" className="w-100 mb-2">
            Content
          </Button>
        </Link>
        <Link to="./contact">
          <Button variant="primary" className="w-100 mb-2">
            Contact
          </Button>
        </Link>
        <Button variant="primary" onClick={handleShow} className="w-100">
          Launch
        </Button>

        <Offcanvas show={show} onHide={handleClose}>
          <Offcanvas.Header closeButton>
            <Offcanvas.Title>
              <div className="admin-brand">Dashboard</div>
              <div className="admin-avartar">
                {/* <img src="./image/Logo.png" alt="" /> */}
              </div>
              <div className="admin-name">User:{user && user.email}</div>
            </Offcanvas.Title>
          </Offcanvas.Header>
          <Offcanvas.Body>
            <Link to="./content">
              <Button variant="warning" className="w-100">
                Content
              </Button>
            </Link>
            <Link to="./contact">
              <Button variant="primary" className="w-100">
                Contact
              </Button>
            </Link>
            <Button variant="warning" onClick={handleLogout}>
              Logout
            </Button>
          </Offcanvas.Body>
        </Offcanvas>
      </Col>
      <Col md={10} className="p-0">
        <Navbar bg="light" expand="lg">
          <Navbar.Brand href="#home">React-Bootstrap</Navbar.Brand>
          <Navbar.Toggle aria-controls="basic-navbar-nav" />
          <Navbar.Collapse id="basic-navbar-nav">
            <Nav className="me-auto justify-content-end">
              <Nav.Link href="#home">Home</Nav.Link>
              <Nav.Link href="#link">Link</Nav.Link>
              <NavDropdown title="Dropdown" id="basic-nav-dropdown">
                <NavDropdown.Item href="#action/3.1">Action</NavDropdown.Item>
                <NavDropdown.Item href="#action/3.2">
                  Another action
                </NavDropdown.Item>
                <NavDropdown.Item href="#action/3.3">
                  Something
                </NavDropdown.Item>
                <NavDropdown.Divider />
                <NavDropdown.Item href="#action/3.4">
                  Separated link
                </NavDropdown.Item>
              </NavDropdown>
            </Nav>
          </Navbar.Collapse>
        </Navbar>
      </Col>
    </Row>
  );
};
export default Dashboard;
<------------------------------------------------------------------------------------->
\\
<------------------------------------------------------------------------------------->
Content.jsx
<------------------------------------------------------------------------------------->
<Container className="content">
          <section>
            {!loading ? (
              <ContentTop data={contentTop} data-aos="fade-down" />
            ) : (
              <LoadingSkeletonTop />
            )}
          </section>
          <main>
            {!loading ? (
              <ContentMid data={contentMid} ata-aos="fade-down" />
            ) : (
              <LoadingSkeletonMid />
            )}
          </main>
          <section>
            {!loading ? (
              <ContentBottom data={contentBottom} data-aos="fade-down" />
            ) : (
              <LoadingSkeletonTop />
            )}
          </section>
        </Container>
<------------------------------------------------------------------------------------->
\\
<------------------------------------------------------------------------------------->
ContenTop.jsx
<------------------------------------------------------------------------------------->
import React from "react";
import ContentTopChild from "../../components/ContentTop/ContentTopChild";
const ContentTop = ({ data }) => {
  return (
    <div className="contentTop">
      {data.map((contentTop) => (
        <ContentTopChild
          key={contentTop.id}
          contentTop={contentTop}
        ></ContentTopChild>
      ))}
    </div>
  );
};

export default ContentTop;
<------------------------------------------------------------------------------------->
\\

<------------------------------------------------------------------------------------->
ContenMid.jsx
<------------------------------------------------------------------------------------->

import React from "react";
import Container from "react-bootstrap/Container";
import ContentMainChild from "../../components/ContentMain/ContentMidChild";

const ContentMid = ({ data }) => {
  return (
    <Container className="m-0">
      {data.map((ContentMain) => (
        <ContentMainChild key={ContentMain.id} contentMain={ContentMain} />
      ))}
    </Container>
  );
};

export default ContentMid;

<------------------------------------------------------------------------------------->
\\

<------------------------------------------------------------------------------------->
ContenBottom.jsx
<------------------------------------------------------------------------------------->
import React from "react";
import ContentBottomChild from "../../components/ContentBottom/ContentBottomChild";

const ContentBottom = ({ data }) => {
  return (
    <div className="contentBottom">
      {data.map((contentBottom) => (
        <ContentBottomChild
          key={contentBottom.id}
          contentBottom={contentBottom}
        />
      ))}
    </div>
  );
};

export default ContentBottom;
<------------------------------------------------------------------------------------->
\\
<------------------------------------------------------------------------------------->
Content.jsx
<------------------------------------------------------------------------------------->
<Row>
        <Col md={3}>
          <Button variant="primary" onClick={handleShow}>
            Launch
          </Button>

          <Offcanvas show={show} onHide={handleClose}>
            <Offcanvas.Header closeButton>
              <Offcanvas.Title>
                <div className="admin-brand">Dashboard</div>
                <div className="admin-avartar">
                  {/* <img src="./image/Logo.png" alt="" /> */}
                </div>
              </Offcanvas.Title>
            </Offcanvas.Header>
            <Offcanvas.Body>
              <Link to="/admin/content">
                <Button variant="warning" className="w-100">
                  Content
                </Button>
              </Link>
              <Link to="/admin/contact">
                <Button variant="primary" className="w-100">
                  Contact
                </Button>
              </Link>
              <Button variant="warning" onClick={handleLogout}>
                Logout
              </Button>
            </Offcanvas.Body>
          </Offcanvas>
        </Col>
        <Col md={9}>
          <Navbar>
            <Container>
              <Navbar.Brand href="#home">Navbar with text</Navbar.Brand>
              <Navbar.Toggle />
              <Navbar.Collapse className="justify-content-end">
                <Navbar.Text>
                  Signed in as: <a href="#login">Mark Otto</a>
                </Navbar.Text>
              </Navbar.Collapse>
            </Container>
          </Navbar>
        </Col>
      </Row>
<------------------------------------------------------------------------------------->
\\
<------------------------------------------------------------------------------------->
Contact.jsx
<------------------------------------------------------------------------------------->


      <Row>
        <Col md={3}>
          <Button variant="primary" onClick={handleShow}>
            Launch
          </Button>

          <Offcanvas show={show} onHide={handleClose}>
            <Offcanvas.Header closeButton>
              <Offcanvas.Title>
                <div className="admin-brand">Dashboard</div>
                <div className="admin-avartar">
                  {/* <img src="./image/Logo.png" alt="" /> */}
                </div>
              </Offcanvas.Title>
            </Offcanvas.Header>
            <Offcanvas.Body>
              <Link to="/admin/content">
                <Button variant="warning" className="w-100">
                  Content
                </Button>
              </Link>
              <Link to="/admin/contact">
                <Button variant="primary" className="w-100">
                  Contact
                </Button>
              </Link>
              <Button variant="warning" onClick={handleLogout}>
                Logout
              </Button>
            </Offcanvas.Body>
          </Offcanvas>
        </Col>
        <Col md={9}>
          <Table bordered hover size="sm">
            <thead>
              <tr>
                <th>Full Name</th>
                <th>Email</th>
                <th>Message</th>
                <th>Subject</th>
                <th>Create Date</th>
                <th>Modified Date</th>
              </tr>
            </thead>
            <tbody>
              {lists.map((list) => (
                <TableContact key={list.id} lists={list} />
              ))}
            </tbody>
          </Table>
        </Col>
      </Row>

<------------------------------------------------------------------------------------->
Content.jsx
<------------------------------------------------------------------------------------->
  <section>
            <div className="contentTop">
              <img src="./image/image1.jpg" className="img-fluid" alt="" />
              <h3 className="contentTitle">
                Unskilled labor shortages are a difficult reality for businesses
                in many states.
              </h3>
              <p>
                Massive labor shortages are causing difficulties for businesses
                across the United States. Currently, The American Chamber of
                Commerce estimates that there are about 10 million open jobs in
                the United States, but only about 6 million Americans are
                unemployed.
              </p>
              <p>
                "It is deeply concerning that at a time when jobs are in such
                high demand nationwide, the number of vacant entry-level
                manufacturing positions continues to grow," Paul Wellener, vice
                chairman and US industrial products and constructions leader at
                Deloitte, said in a statement.
              </p>
              <p>
                Employers are having a hard time finding qualified workers for
                many positions. They are also facing difficulties in finding
                personnel due to the fiercely competitive labor market. Business
                owners are having to raise wages, improve benefits and invest in
                developing their employees.
              </p>
              <p>
                This has led to an increase in demand for migrant workers in a
                number of industries and states.
              </p>
              <p>
                If you are an employer struggling to fill a variety of unskilled
                jobs, you might consider hiring foreign workers. The EB-3
                immigrant visa is one of the most common immigrant visas used by
                employers to fill these open positions.
              </p>
            </div>
            <div className="contentTop">
              <img src="./image/image2.jpg" className="img-fluid" alt="" />
              <h3 className="contentTitle">
                EB 3 Visa Green Card Program for Employers - A solution to the
                chronic shortage of unskilled workers
              </h3>
              <p>
                If you are an employer affected by unskilled worker shortages
                and learn that the issue could not be solved effectively in the
                next some months or some years, hiring unskilled labor from
                abroad through EB3 visa program can be a good choice for you.
              </p>
              <p>
                EB3 visa is an employment-based category of visa issued to
                foreign national employees to work in the United States. This
                kind of visa category allows U.S. employers to hire a foreign
                national through green card sponsorship when American workers
                are unavailable.
              </p>
            </div>
          </section>
          <main>
            <div className="contentMid">
              <h3>
                To be eligible for this program, an employer only needs to meet
                two requirements:
              </h3>
              <ol>
                <li>
                  The employer must have a bona fide offer of full-time,
                  permanent employment for the foreign worker.
                </li>
                <li>
                  The employer must pay at least the prevailing wage for the
                  occupation in the area of intended employment
                </li>
              </ol>
              <p>
                The EB3 visa is open to professionals, skilled workers, and
                unskilled workers. Here, we just focus on unskilled workers
                only.{" "}
              </p>
            </div>
            <div className="contentMid">
              <h3>
                To be eligible for EB3 visa unskilled worker, an alien has to
                meet the two requirements{" "}
              </h3>
              <ol>
                <li>
                  The worker can perform unskilled labor requiring less than 2
                  years training or experience, not of a temporary or seasonal
                  nature.
                </li>
                <li>
                  The worker got a labor certification and a permanent,
                  full-time job offer from a qualified employer.{" "}
                </li>
              </ol>
            </div>
            <div className="contentMid">
              <h3>
                Employers willing to go through the EB3 program will be able to
                find the workers they need to stay in business for the long
                term.
              </h3>
              <p>
                Employers willing to go through the EB3 program will be able to
                find the workers they need to stay in business for the long
                term.
              </p>
              <p>
                Employers willing to go through the EB3 program will be able to
                find the workers they need to stay in business for the long
                term.
              </p>
              <p>Hiring EB3 employees will benefit your business:</p>
              <ol>
                <li>Cut recruitment costs.</li>
                <li>Achieve annual HR targets.</li>
                <li>Maintain stable employment environment.</li>
                <li>Build a team of dedicated workers</li>
              </ol>
            </div>
            <div className="contentMid">
              <h3 className="contentTitle">EB3 Visa Process</h3>
              <p>
                The process of hiring an immigrant worker through the EB-3 visa
                can be done in four steps
              </p>
              <ul>
                <li>Step 1: PERM Labor Certification</li>
                <li>Step2: I-140 Petition</li>
                <li>Step 3 Wait for Priority Date</li>
                <li>Step 4: Consular Processing or Adjustment of Status</li>
              </ul>
            </div>
          </main>
          <section>
            <div className="contentBottom">
              <img src="./image/image3.jpg" alt="" />
              <h3 className="contentTitle">
                Vietnam Workers - A reliable labor source for the US market
              </h3>
              <p>
                If you have ever hired Vietnamese workers, you will easily
                recognize their advantages:
              </p>
              <ul>
                <li>
                  Always find a way to do the job well, even with those that
                  require meticulousness, or dexterity, and carefulness.
                </li>
                <li>Work diligently</li>
                <li>Ready to work overtime</li>
                <li>
                  Always looking for a stable job to ensure an income for their
                  family
                </li>
              </ul>
            </div>
            <div className="contentBottom">
              <img src="./image/image4.jpg" alt="" />
              <h3 className="contentTitle">Let us be your partner</h3>
              <p>
                You would think that it is difficult and complicated to recruit
                this source of staff at the first glance.
              </p>
              <p>
                Actually, this recruitment is not difficult, we can help you
                through the process and find qualified EB3 Vietnam candidates.
                Our mission is to provide low-cost recruitment solutions for
                your long-term staffing goals.
              </p>
              <p>
                This way of recruiting will save you cost and time in recruiting
                and can stabilize the number of employees in the long run. These
                workers will work steadily for your company for at least 12
                months.
              </p>
              <p>
                We are here to help you connect with unskilled workers from
                Vietnam. These ideal candidates have a great work ethic and
                excellent communication skills.
              </p>
            </div>
          </section>
<------------------------------------------------------------------------------------->
import React, { useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import { UserAuth } from "../../../context/AuthContext";
import { CKEditor } from "@ckeditor/ckeditor5-react";
import ClassicEditor from "@ckeditor/ckeditor5-build-classic";
import {
  Row,
  Col,
  Button,
  Alert,
  Form,
  Navbar,
  Container,
} from "react-bootstrap";
import { v4 } from "uuid";
import { collection, addDoc } from "firebase/firestore";
import { db, storage } from "../../../firebase";
import { ref, uploadBytes } from "firebase/storage";
const Content = () => {
  const navigate = useNavigate();
  const { user, logout } = UserAuth();
  const usersCollectionRef = collection(db, "content");
  const [title, setTitle] = useState("");
  const [position, setPosition] = useState("");
  const [content, setContent] = useState("");
  const [numberPosition, setNumberPosition] = useState(0);
  const [imageUpload, setImageUpload] = useState(null);
  const [imageUrls, setImageUrls] = useState([]);
  const [singleImage, setSingleImage] = useState("");
  console.log(imageUpload);
  const createContent = async () => {
    await addDoc(usersCollectionRef, {
      title: title,
      position: position,
      numberPosition: numberPosition,
      content: content,
    });
    console.log("added");
  };
  const handleLogout = async () => {
    try {
      await logout();
      navigate("/signin");
      console.log("you logout");
    } catch (e) {
      console.log(e.message);
    }
  };
  const uploadImage = () => {
    if (imageUpload == null) return;
    const imageRef = ref(storage, `images/${imageUpload.name + v4()}`);
    uploadBytes(imageRef, imageUpload).then(() => {
      alert("da up");
    });
  };
  const SingleUpload = (e) => {
    const uploadTask = storage
      .ref("singleImage")
      .child("Image1")
      .put(singleImage);
    uploadTask.on(
      "state_changed",
      (snapshot) => {
        let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
      },
      (err) => {
        console.log(err);
      },
      () => {
        storage
          .ref("singleImage")
          .child("Image1")
          .getDownloadURL()
          .then((imageUrl) => {
            db.collection("content").add({ imgUrl: imageUrl });
          });
      }
    );
  };
  return (
    <div className="pannelAdmin">
      <Row className=" overflow-hidden">
        <Col md={2} className="sidebar">
          <div className="area">
            <nav className="main-menu">
              <div className="sidebar-logo">
                <img src="./image/Logo.png" alt="" />
              </div>
              <div className="sidebar-avatar">
                <img
                  src="https://images.unsplash.com/photo-1440589473619-3cde28941638?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"
                  alt=""
                />
                <span>{user && user.email}</span>
              </div>
              <ul>
                <li className="has-subnav">
                  <Link to="../admin">
                    <i className="fa fa-laptop fa-2x" />
                    <span className="nav-text">Admin</span>
                  </Link>
                </li>
                <li className="has-subnav">
                  <Link to="../admin/content">
                    <i className="fa fa-laptop fa-2x" />
                    <span className="nav-text">Content</span>
                  </Link>
                </li>
                <li className="has-subnav">
                  <Link to="../admin/contact">
                    <i className="fa fa-list fa-2x" />
                    <span className="nav-text">Contact</span>
                  </Link>
                </li>
              </ul>

              <ul className="logout">
                <li>
                  <Button onClick={handleLogout}>
                    <i className="fa fa-power-off fa-2x" />
                    <span className="nav-text">Logout</span>
                  </Button>
                </li>
              </ul>
            </nav>
          </div>
        </Col>
        {/* <!--- Content ---> */}
        <Col md={10} className="">
          <Form>
            <Row className="m-0 ">
              <Row>
                <Col md={2}>Add new content</Col>
                <Col md={8}></Col>
                <Col md={1}>
                  <Button onClick={createContent}>Add</Button>
                </Col>
                <Col md={1}>
                  <Button>Cancel</Button>
                </Col>
              </Row>
              <Row>
                <Col md={6}>
                  <Form.Group className="mb-3">
                    <Form.Label>Title</Form.Label>
                    <Form.Control
                      type="text"
                      placeholder="Enter Your Name"
                      onChange={(e) => setTitle(e.target.value)}
                    />
                  </Form.Group>
                </Col>
                <Col md={6}>
                  <Form.Group className="mb-3">
                    <Form.Label>Position</Form.Label>
                    <Form.Select onChange={(e) => setPosition(e.target.value)}>
                      <option value={"Top"}>Top</option>
                      <option value={"Mid"}>Mid</option>
                      <option value={"Bottom"}>Bottom</option>
                    </Form.Select>
                  </Form.Group>
                </Col>
              </Row>
              <Row>
                <Col md={6}>
                  <Form.Group className="mb-3">
                    <Form.Label>Number</Form.Label>
                    <Form.Control
                      type="Number"
                      placeholder="Enter You Number"
                      onChange={(e) => setNumberPosition(e.target.value)}
                    />
                  </Form.Group>
                </Col>
                <Col md={6}>
                  <Row>
                    <Col md={10}>
                      <Form.Group controlId="formFile" className="mb-3">
                        <Form.Label>Image</Form.Label>
                        <Form.Control
                          type="file"
                          onChange={(e) => setImageUpload(e.target.files[0])}
                        />
                      </Form.Group>
                    </Col>
                    <Col md={2}>
                      <Button onClick={SingleUpload}>Add</Button>
                    </Col>
                  </Row>
                </Col>
              </Row>
            </Row>
          </Form>
          <h2>Using CKEditor 5 build in React</h2>
          <CKEditor
            editor={ClassicEditor}
            data="<p>Hello from CKEditor 5!</p>"
            onReady={(editor) => {
              // You can store the "editor" and use when it is needed.
              console.log("Editor is ready to use!", editor);
            }}
            onChange={(event, editor) => {
              const data = editor.getData();
              console.log({ data });
              setContent(editor.getData());
            }}
            onBlur={(event, editor) => {
              console.log("Blur.", editor);
            }}
            onFocus={(event, editor) => {
              console.log("Focus.", editor);
            }}
          />
          {content}
        </Col>
      </Row>
    </div>
  );
};

export default Content;















@@###
